
#include <iostream>
using namespace std;

int check(int a[],int x,int n)
{
    for(int i=0;i<n;i++)
    if(a[i] == x)
    return i;
    
    return -1;
}
void printpostorder(int in[],int pre[],int n)
{
     int root = check(in,pre[0],n);
     
     //if tree has left subtree , then print it
     if(root != 0)
     printpostorder(in,pre+1,root);
     
     //if tree has right subtree , then print it 
     if(root != n-1)
     printpostorder(in+root+1, pre+root+1 , n-root-1);
     
     //print root
     cout << pre[0] << " ";
     
}
int main()
{
    int in[] = { 4, 2, 5, 1, 3, 6 }; 
    int pre[] = { 1, 2, 4, 5, 3, 6 }; 
    int n = sizeof(in)/sizeof(in[0]);
    cout << "Post order Traversal " << endl;
    printpostorder(in,pre,n);

    return 0;
}
