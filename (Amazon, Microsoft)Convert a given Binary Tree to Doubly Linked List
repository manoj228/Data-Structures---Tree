//Time complexity : O(n)

#include <bits/stdc++.h>
using namespace std;

struct node
{
  int data;
  struct node *left,*right;
};

void printlist(struct node *t)
{
 while(t)
 {
     printf("%d ",t->data);
     t=t->right;
 }
}

struct node *newNode(int data)
{
    struct node *t =(struct node*)malloc(sizeof(struct node));
    t -> data = data;
    t->left = t->right = NULL;
    return t;
}

void btodll(struct node *root,struct node **head)
{
    if(root == NULL) return;
    
    btodll(root->right,head); 
    
    root->right = (*head);
    
    if((*head)!=NULL) (*head)->left = root;
     
    (*head) = root;

    btodll(root->left,head);
}

int main()
{
    struct node* root = newNode(5); 
    root->left = newNode(3); 
    root->right = newNode(6); 
    root->left->left = newNode(1); 
    root->left->right = newNode(4); 
    root->right->right = newNode(8); 
    root->left->left->left = newNode(0); 
    root->left->left->right = newNode(2); 
    root->right->right->left = newNode(7); 
    root->right->right->right = newNode(9); 
  
    struct node *head = NULL;
   
   btodll(root,&head); 
   
   printlist(head);
   
    return 0;
}
