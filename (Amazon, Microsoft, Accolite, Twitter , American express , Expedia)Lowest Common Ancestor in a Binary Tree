//Time complexity : O(n)
#include <bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    struct Node *left,*right;
};

Node *newNode(int data)
{
 Node *t = new Node;
 t->data = data;
 t->left = t->right = NULL;
 return t;
}

Node* findlca(Node *root,int n1,int n2)
{
    if(!root) return 0;
    
    if(root->data==n1 || root->data==n2)
    return root;
    
    Node *left = findlca(root->left,n1,n2);
    Node *right = findlca(root->right,n1,n2);
    
    //if both left and right have values (non - null)
    if(left && right)
    return root;
    
    //if any one is null 
    return (left) ? left : right;
}
int main()
{
    Node* root = newNode(1); 
    root->left = newNode(2); 
    root->right = newNode(3); 
    root->left->left = newNode(4); 
    root->left->right = newNode(5); 
    root->right->left = newNode(6); 
    root->right->right = newNode(7); 
    
    printf("%d",findlca(root,4,5)->data);
    return 0;
}
