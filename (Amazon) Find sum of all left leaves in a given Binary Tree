//Time complexity : O(n)
#include <bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    struct Node *left,*right;
};

Node *newNode(int data)
{
    struct Node *temp = (struct Node *)malloc(sizeof(struct Node));
    temp->data = data;
    temp->left = temp->right = NULL;
    return temp;
}

void sumleft(Node *root,bool isleft,int *s)
{
    if(!root) return;
    
    //left leaf node
    if(!root->left && !root->right && isleft)
    *s += root -> data;
    
    sumleft(root->left,1,s);
    sumleft(root->right,0,s);
}

int sum(Node *a)
{
    int s = 0;
    sumleft(a,0,&s);
    return s;
}
int main()
{
    struct Node *root         = newNode(20); 
    root->left                = newNode(9); 
    root->right               = newNode(49); 
    root->right->left         = newNode(23); 
    root->right->right        = newNode(52); 
    root->right->right->left  = newNode(50); 
    root->left->left          = newNode(5); 
    root->left->right         = newNode(12); 
    root->left->right->right  = newNode(12); 
   
   printf("%d ",sum(root));

    return 0;
}
