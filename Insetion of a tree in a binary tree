
#include <iostream>
#include <queue>
using namespace std;

struct node
{
    int data;
    struct node *left,*right;
};

struct node *newNode(int data)
{
    struct node *temp = (struct node *)malloc(sizeof(struct node));
    temp->data = data;
    temp->left = temp->right = NULL;
    
    return temp;
}

void inorder(struct node *temp)
{
    if(temp -> left)
    inorder(temp -> left);
    
    cout << temp ->data << " ";
    
    if(temp->right)
    inorder(temp -> right);
} 

void insert(struct node *temp,int data)
{
    queue<struct node *> q;
    q.push(temp);
    
    while(!q.empty())
    {
        struct node *temp = q.front();
        q.pop();
        
        if(!temp->left)
        {
            temp->left = newNode(data);
            break;
        }
        else
        q.push(temp);
        
        if(!temp->right)
        {
         temp->right = newNode(data);
         break;
        }
        else
        q.push(temp);
    }
    
}
int main()
{
    struct node* root = newNode(10); 
    root->left = newNode(11); 
    root->left->left = newNode(7); 
    root->right = newNode(9); 
    root->right->left = newNode(15); 
    root->right->right = newNode(8); 
  
   cout << "Before Insertion :\n";
   inorder(root);
   
   int data = 12;
  insert(root,data);
   
   cout<<"\nAfter Insertion :\n";
   inorder(root);
    return 0;
}
