//Time complexity : O(n)

#include <bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    struct node *left,*right;
};

struct node* newnode(int data)
{
    struct node *t = (struct node *)malloc(sizeof(struct node));
    t->data=data;
    t->left=t->right = NULL;
    return t;
}

void printlist(struct node *t)
{
    struct node *temp = t;
    do{
        printf("%d ",temp->data);
        temp = temp->right;
    }while(temp!=t);
    
}

void btocll(struct node *t,struct node **head)
{
    if(t==NULL) return; 
    
    btocll(t->right,head);
    
    t->right = (*head);
    
    if((*head)) 
    (*head) -> left = t;
    
    (*head)=t;
    
    btocll(t->left,head);
    
}
int main()
{
    struct node *t = newnode(1);
    t->left = newnode( 2);
    t->right = newnode(3);
    t->left->left = newnode(4);
    t->left->right = newnode(5);
    
    struct node *r = NULL;
    btocll(t,&r);

    //copy of dll
    struct node *cr = r;
    
    while(cr->right)cr=cr->right;
    
    //printf("%d %d",r->data,cr->data);
    
    //make circular
    r->left = cr;
    cr->right = r;
    
    printlist(r);
    
    return 0;
}
